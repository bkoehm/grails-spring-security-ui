name: "Release"
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: 'grails-build'
      GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
    steps:
      - name: "üì• Checkout repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ DEVELOCITY_ACCESS_KEY }}
      - name: "üìù Store the current release version"
        id: release_version
        run: echo "value=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: "‚öô Run pre-release"
        uses: grails/github-actions/pre-release@main
      - name: "üîê Generate key file for artifact signing"
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg
      - name: "üì§ Publish release artifacts to Sonatype"
        id: publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_NEXUS_URL: ${{ secrets.SONATYPE_NEXUS_URL }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: >
          ./gradlew
          -Psigning.secretKeyRingFile=${{ github.workspace }}/secring.gpg
          publishToSonatype
          closeAndReleaseSonatypeStagingRepository
      - name: "‚úçÔ∏è Generate Documentation"
        id: docs
        if: steps.publish.outcome == 'success'
        run: ./gradlew docs
      - name: "Export Gradle Properties"
        uses: grails/github-actions/export-gradle-properties@main
      - name: "üì§ Publish to Github Pages"
        if: steps.docs.outcome == 'success'
        uses: grails/github-pages-deploy-action@grails
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          TARGET_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/build/docs
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          VERSION: ${{ steps.release_version.outputs.release_version }}
      - name: "‚öôÔ∏è Run post-release"
        if: steps.publish.outcome == 'success' && steps.docs.outcome == 'success' && success()
        uses: grails/github-actions/post-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}