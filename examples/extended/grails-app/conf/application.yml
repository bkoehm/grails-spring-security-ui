info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
grails:
  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
  mime:
    disable:
      accept:
        header:
          userAgents:
          - Gecko
          - WebKit
          - Presto
          - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
      - text/html
      - application/xhtml+xml
      js: text/javascript
      json:
      - application/json
      - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
      - application/hal+json
      - application/hal+xml
      xml:
      - text/xml
      - application/xml
dataSource:
  url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  driverClassName: org.h2.Driver
  username: sa
  password: ''
  pooled: true
  jmxExport: true
  dbCreate: update
hibernate:
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false

---
grails:
    mail:
        default:
            from: do.not.reply@server.com
        host: localhost
        port: 1025
---
grails:
    plugin:
        springsecurity:
            filterChain:
                chainMap:
                    -
                        pattern: /assets/**
                        filters: none
                    -
                        pattern: /**/favicon.ico
                        filters: none
                    -
                        pattern: /**/css/**
                        filters: none
                    -
                        pattern: /**/images/**
                        filters: none
                    -
                        pattern: /**/js/**
                        filters: none
                    -
                        pattern: /**
                        filters: JOINED_FILTERS
            secureChannel:
                definition:
                    -
                        pattern: /testsecure/**
                        access: REQUIRES_SECURE_CHANNEL
                    -
                        pattern: /testinsecure/**
                        access: REQUIRES_INSECURE_CHANNEL
                    -
                        pattern: /testany/**
                        access: ANY_CHANNEL
            authority:
                className: test.Role
            cacheUsers: true
            rememberMe:
                persistent: true
                persistentToken:
                    domainClassName: test.PersistentToken
            requestMap:
                className: test.Requestmap
            securityConfigType: Requestmap
            userLookup:
                authorityJoinClassName: test.UserRole
                userDomainClassName: test.User
            useSwitchUserFilter: true
            ui:
                forgotPassword:
                    requireForgotPassEmailValidation: false
                register:
                    requireEmailValidation: false
